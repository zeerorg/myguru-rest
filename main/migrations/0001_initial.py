# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-08 09:53
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('phone', models.CharField(db_index=True, max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '999999999'. Up to 15 digits allowed.", regex='^[1-9][0-9]{9}$')])),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('profile_pic', models.ImageField(upload_to='')),
                ('study_year', models.SmallIntegerField()),
                ('verified_phone', models.BooleanField(default=False)),
                ('verified_email', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StudentSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('phone', models.CharField(db_index=True, max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '999999999'. Up to 15 digits allowed.", regex='^[1-9][0-9]{9}$')])),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('profile_pic', models.ImageField(upload_to='')),
                ('about', models.TextField(blank=True)),
                ('linked_in', models.CharField(blank=True, max_length=50)),
                ('verified_phone', models.BooleanField(default=False)),
                ('verified_email', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=50)),
                ('year', models.SmallIntegerField()),
                ('description', models.TextField(blank=True)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TopicClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_time', models.TimeField()),
                ('start_time', models.TimeField()),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Topic')),
            ],
        ),
        migrations.AddField(
            model_name='studentsubscription',
            name='topic_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Topic'),
        ),
        migrations.AlterUniqueTogether(
            name='topic',
            unique_together=set([('title', 'subject', 'year')]),
        ),
        migrations.AlterUniqueTogether(
            name='studentsubscription',
            unique_together=set([('student_id', 'topic_id')]),
        ),
    ]
